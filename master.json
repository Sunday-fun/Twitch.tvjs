{"meta":{"generator":"0.9.0","format":20,"date":1604861958366},"custom":{"examples":{"name":"Examples","files":{"ping":{"name":"Ping","type":"js","content":"'use usrict';\n\n// Import Twitch.tvjs module\nconst Twitch = require('twitch.tvjs');\n\n// Create an instance of a Twitch client\n// Pass in all channel this client will be in\nconst client = new Twitch.Client({\n  channels: ['CHANNEL_NAME'],\n});\n\n/**\n * Ready event will be emited when the client\n * information is reseved. There for client channels might be empty \n */\nclient.on('ready', () => {\n  console.log(`Ready as ${client.user.username}`);\n});\n\n// Chat is on every chat message of a channel\nclient.on('chat', (msg) => {\n  // Return message if its from CLient\n  if (msg.self) return;\n\n  // Only reply if message content equals \"!ping\"\n  if (msg.content === '!ping') {\n    // message channel \"Pong!\"\n    msg.channel.send('Pong!');\n  }\n});\n\n// Login to twith\nclient.login('<username>', 'oauth:<password>');\n","path":"docs/examples/ping.js"}}}},"classes":[{"name":"Client","description":"CLient, The Main hub point twitch api","extends":[[["EventEmitter"]]],"props":[{"name":"options","description":"client options","nullable":true,"type":[[["clientOptions"]]],"meta":{"line":21,"file":"client.js","path":"src/client"}},{"name":"reconnect","description":"Whether or not to reconnect the client if gets disconnected","type":[[["boolean"]]],"meta":{"line":27,"file":"client.js","path":"src/client"}},{"name":"_channels","access":"private","type":[[["Array","<"],["string",">"]]],"meta":{"line":33,"file":"client.js","path":"src/client"}},{"name":"channels","type":[[["Storage","<"],["string",", "],["Channel",">"]]],"meta":{"line":38,"file":"client.js","path":"src/client"}},{"name":"user","description":"User that the client is logged in as","nullable":true,"type":[[["ClientUser"]]],"meta":{"line":44,"file":"client.js","path":"src/client"}},{"name":"ws","access":"public","type":[[["ClientWebSocket"]]],"meta":{"line":50,"file":"client.js","path":"src/client"}},{"name":"ready","description":"whether or not the client is ready","access":"public","type":[[["boolean"]]],"meta":{"line":57,"file":"client.js","path":"src/client"}},{"name":"currentLatency","description":"Client ping rate","access":"public","type":[[["number"]]],"meta":{"line":64,"file":"client.js","path":"src/client"}},{"name":"latency","description":"Respons latency","access":"public","type":[[["Date"]]],"meta":{"line":71,"file":"client.js","path":"src/client"}},{"name":"readyAt","description":"The time the client was ready at","access":"public","nullable":true,"type":[[["number"]]],"meta":{"line":78,"file":"client.js","path":"src/client"}}],"methods":[{"name":"login","description":"Connect to twitch","params":[{"name":"username","description":"accounts username","type":[[["string"]]]},{"name":"password","description":"accounts auth password","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":92,"file":"client.js","path":"src/client"}}],"meta":{"line":13,"file":"client.js","path":"src/client"}},{"name":"ClientWebSocket","extends":[[["EventEmitter"]]],"props":[{"name":"client","description":"The client","nullable":true,"type":[[["Client"]]],"meta":{"line":20,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"socket","description":"The WebSocket connection","nullable":true,"type":[[["WebSocket"]]],"meta":{"line":26,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"reconnect","type":[[["boolean"]]],"meta":{"line":31,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"reason","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"pingTimeout","nullable":true,"type":[[["setTimeout"]]],"meta":{"line":41,"file":"ClientWebSocket.js","path":"src/client/websocket"}}],"methods":[{"name":"connect","description":"Connects to twitch server\n<info>login to twitch wss,\nmore info found here {@link https://dev.twitch.tv/docs/irc/guide#connecting-to-twitch-irc}</info>","params":[{"name":"ops","description":"identify data","type":[[["connectionOptions"]]]}],"returns":[[["void"]]],"meta":{"line":66,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"send","description":"send a server command to server","params":[{"name":"command","description":"server command","type":[[["string"]]]},{"name":"important","description":"if this command should be added first in queue","default":false,"type":[[["boolean"]]]}],"meta":{"line":121,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"_send","description":"send data to gatway server","access":"private","params":[{"name":"command","description":"server command","type":[[["string"]]]}],"meta":{"line":131,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"process","description":"Process queue","access":"private","returns":[[["void"]]],"meta":{"line":141,"file":"ClientWebSocket.js","path":"src/client/websocket"}}],"meta":{"line":12,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"Channel","description":"Twitch Chat, Room or Channel","props":[{"name":"name","description":"channel name","type":[[["string"]]],"meta":{"line":17,"file":"Channel.js","path":"src/structure"}},{"name":"id","description":"Channel id","nullable":true,"type":[[["string"]]],"meta":{"line":23,"file":"Channel.js","path":"src/structure"}},{"name":"moderators","description":"Channel moderators","type":[[["Storage","<"],["string",", "],["Viewer",">"]]],"meta":{"line":35,"file":"Channel.js","path":"src/structure"}},{"name":"chatType","description":"Type of chat","nullable":true,"type":[[["string"]]],"meta":{"line":41,"file":"Channel.js","path":"src/structure"}},{"name":"subs","description":"chat subs only mode","nullable":true,"type":[[["boolean"]]],"meta":{"line":47,"file":"Channel.js","path":"src/structure"}},{"name":"r9k","description":"if message characters of 9 must be unique","nullable":true,"type":[[["boolean"]]],"meta":{"line":53,"file":"Channel.js","path":"src/structure"}},{"name":"parseName","description":"Hash sliced name","readonly":true,"type":[[["string"]]],"meta":{"line":61,"file":"Channel.js","path":"src/structure"}}],"methods":[{"name":"send","description":"Message that channel","examples":["<channel>.send('ping').catch(console.log);"],"params":[{"name":"content","description":"message content","type":[[["string"]],[["Object"]]]}],"async":true,"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":72,"file":"Channel.js","path":"src/structure"}},{"name":"unban","description":"Unbans a viewer from this channel","params":[{"name":"username","description":"Viewer being unban for this channel","type":[[["string"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":99,"file":"Channel.js","path":"src/structure"}},{"name":"leave","description":"leaves channel","examples":["<channel>.leave();"],"returns":[[["void"]]],"meta":{"line":122,"file":"Channel.js","path":"src/structure"}}],"meta":{"line":11,"file":"Channel.js","path":"src/structure"}},{"name":"ClientUser","description":"Clients global user","props":[{"name":"username","description":"clients display name","type":[[["string"]]],"meta":{"line":13,"file":"ClientUser.js","path":"src/structure"}},{"name":"id","description":"clients id","type":[[["string"]]],"meta":{"line":19,"file":"ClientUser.js","path":"src/structure"}}],"meta":{"line":6,"file":"ClientUser.js","path":"src/structure"}},{"name":"Message","description":"Message emeited structure","props":[{"name":"author","description":"message Viewer data","type":[[["Viewer"]]],"meta":{"line":18,"file":"Message.js","path":"src/structure"}},{"name":"channel","description":"message channel","type":[[["Channel"]]],"meta":{"line":24,"file":"Message.js","path":"src/structure"}},{"name":"content","description":"message content","type":[[["string"]]],"meta":{"line":30,"file":"Message.js","path":"src/structure"}},{"name":"self","description":"Whether the message is from client","type":[[["boolean"]]],"meta":{"line":36,"file":"Message.js","path":"src/structure"}}],"meta":{"line":6,"file":"Message.js","path":"src/structure"}},{"name":"Storage","extends":[[["Map"]]],"methods":[{"name":"map","params":[{"name":"fn","description":"takes object and reterns something","type":[[["function"]]]}],"returns":[[["Array"]]],"meta":{"line":11,"file":"Storage.js","path":"src/structure"}},{"name":"find","params":[{"name":"fn","description":"-","type":[[["function"]]]}],"returns":[["*"]],"meta":{"line":23,"file":"Storage.js","path":"src/structure"}}],"meta":{"line":6,"file":"Storage.js","path":"src/structure"}},{"name":"Viewer","description":"A message user structure","props":[{"name":"username","description":"Viewer display name","type":[[["string"]]],"meta":{"line":22,"file":"Viewer.js","path":"src/structure"}},{"name":"id","description":"Viewer id","type":[[["string"]]],"meta":{"line":28,"file":"Viewer.js","path":"src/structure"}},{"name":"mod","description":"Whether the viewer is mod","type":[[["boolean"]]],"meta":{"line":34,"file":"Viewer.js","path":"src/structure"}},{"name":"color","description":"Viewers channel color","nullable":true,"type":[[["string"]]],"meta":{"line":40,"file":"Viewer.js","path":"src/structure"}},{"name":"badges","description":"Viewers chat badges","type":[[["string"]]],"meta":{"line":46,"file":"Viewer.js","path":"src/structure"}},{"name":"subscriber","description":"Whether the viewer is a subscriber on this channel","type":[[["boolean"]]],"meta":{"line":52,"file":"Viewer.js","path":"src/structure"}},{"name":"channel","description":"The channel from where the viewer was reserved","type":[[["Channel"]]],"meta":{"line":58,"file":"Viewer.js","path":"src/structure"}}],"methods":[{"name":"ban","description":"Ban this Viewer from Channel","params":[{"name":"reason","description":"ban reason","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["Viewer",">"]]],"meta":{"line":66,"file":"Viewer.js","path":"src/structure"}},{"name":"timeout","description":"Timeout viewer from channel","params":[{"name":"time","description":"timeout time","optional":true,"default":60000,"type":[[["number"]]]}],"returns":[[["Promise","<"],["Viewer",">"]]],"meta":{"line":87,"file":"Viewer.js","path":"src/structure"}}],"meta":{"line":10,"file":"Viewer.js","path":"src/structure"}},{"name":"queue","description":"Channel connector queue","construct":{"name":"queue","description":"queue options","params":[{"name":"delay","description":"delay time","type":[[["number"]]]}]},"methods":[{"name":"add","description":"add to queue","params":[{"name":"fn","description":"function used wene called queue","type":[[["function"]]]},{"name":"delay","description":"time used wene called queue","type":[[["number"]]]}],"meta":{"line":22,"file":"Queue.js","path":"src/utils"}},{"name":"run","description":"playes all the queue","params":[{"name":"index","description":"-","nullable":true,"type":[[["number"]]]}],"meta":{"line":30,"file":"Queue.js","path":"src/utils"}},{"name":"play","description":"go thro all the queue","returns":[[["void"]]],"meta":{"line":39,"file":"Queue.js","path":"src/utils"}},{"name":"kill","description":"resets the timer","returns":[[["void"]]],"meta":{"line":56,"file":"Queue.js","path":"src/utils"}}],"meta":{"line":6,"file":"Queue.js","path":"src/utils"}}],"interfaces":[],"typedefs":[],"externals":[]}