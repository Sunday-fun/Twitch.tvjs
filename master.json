{"meta":{"generator":"0.9.0","format":20,"date":1612406436912},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Twitch.tvjs\n<a href=\"https://nodei.co/npm/twitch.tvjs/\"><img src=\"https://nodei.co/npm/twitch.tvjs.png?downloads=true&stars=true\" alt=\"NPM info\" /></a>\n\n# Welcome!\n\nWecome to Twitch.tvjs v1.1.3 documentation.\n\n# Install\n**Node v12 required**\n```\n$ npm install twitch.tvjs \n```\n\n# Exampale\n```js\nconst twitch = require('twitch.tvjs');\nconst client = new twitch.Client({\n  channels: ['channel1', 'channel2'],\n});\n\nclient.on('ready', () => {\n  console.log(`${client.user.username} Ready`);\n});\n\nclient.on('chat', (message) => {\n  if (message.self) return;\n  if (message.content === '!ping') {\n    message.reply('!Pong');\n  }\n});\n\nclient.login('<username>', 'oauth:<auth-token>');\n```","path":"docs/general/welcome.md"}}},"examples":{"name":"Examples","files":{"ping":{"name":"Ping","type":"js","content":"'use usrict';\n\n// Import Twitch.tvjs module\nconst Twitch = require('twitch.tvjs');\n\n// Create an instance of a Twitch client\n// Pass in all channel this client will be joining\nconst client = new Twitch.Client({\n  channels: ['CHANNEL_NAME'],\n});\n\n/**\n * Ready event will be emited when the client\n * information is reseved. There for client channels might be empty \n */\nclient.on('ready', () => {\n  console.log(`Ready as ${client.user.username}`);\n});\n\n// Chat is on every chat message of a channel\nclient.on('chat', (msg) => {\n  // Return message if its from CLient\n  if (msg.self) return;\n\n  // Only reply if message content equals \"!ping\"\n  if (msg.content === '!ping') {\n    // message channel \"Pong!\"\n    msg.channel.send('Pong!');\n  }\n});\n\n// Login to twitch\nclient.login('<username>', 'oauth:<auth-token>');\n","path":"docs/examples/ping.js"}}},"information":{"name":"Information","files":{"login-params":{"name":"login-params","type":"md","content":"# login-params\n\nAs you have seen for the client login method you require two params 'username' and 'auth-token', 'token' or 'auth-twitch-token',\nThe username is the accounts display name.\n\n\nThe token is like the secret password for the account you can resive you secret by going in to [twitchapps.com/tmi](https://twitchapps.com/tmi/)\nlogin to yout twitch account (NOTE: It is NOT recomended to use your main account as it can get ban best to have a bot account) then you will resive\na auth token (NOTE: You Sould also not show this auth token) finaly past your token with a 'auth:' infront of it \nand insert into the second param and your username in the first.\n","path":"docs/information/login-params.md"}}}},"classes":[{"name":"Client","description":"The Main hub point to twitch","extends":[[["EventEmitter"]]],"construct":{"name":"Client","params":[{"name":"options","description":"Options for the client","optional":true,"type":[[["ClientOptions"]]]}]},"props":[{"name":"options","description":"Options for the client","nullable":true,"type":[[["ClientOptions"]]],"meta":{"line":25,"file":"client.js","path":"src/client"}},{"name":"reconnect","description":"Whether or not to reconnect the client if gets disconnected","type":[[["boolean"]]],"meta":{"line":31,"file":"client.js","path":"src/client"}},{"name":"_channels","access":"private","type":[[["Array","<"],["string",">"]]],"meta":{"line":37,"file":"client.js","path":"src/client"}},{"name":"channels","description":"chached channel the client hase joined","type":[[["Storage","<"],["string",", "],["Channel",">"]]],"meta":{"line":43,"file":"client.js","path":"src/client"}},{"name":"viewers","description":"chached viewers the client hase chached during PRIVMSG event","type":[[["Storage","<"],["string",", "],["Viewer",">"]]],"meta":{"line":49,"file":"client.js","path":"src/client"}},{"name":"user","description":"User that the client is logged in as","nullable":true,"type":[[["ClientUser"]]],"meta":{"line":55,"file":"client.js","path":"src/client"}},{"name":"ws","description":"websocket gatway connector","type":[[["ClientWebSocket"]]],"meta":{"line":61,"file":"client.js","path":"src/client"}},{"name":"ready","description":"whether or not the client is ready","type":[[["boolean"]]],"meta":{"line":67,"file":"client.js","path":"src/client"}},{"name":"currentLatency","description":"Client ping rate","type":[[["number"]]],"meta":{"line":73,"file":"client.js","path":"src/client"}},{"name":"latency","description":"Response latency","type":[[["Date"]]],"meta":{"line":79,"file":"client.js","path":"src/client"}},{"name":"readyAt","description":"The time the client was ready at","nullable":true,"type":[[["number"]]],"meta":{"line":85,"file":"client.js","path":"src/client"}}],"methods":[{"name":"login","description":"Connect to twitch with the username and account auth token","params":[{"name":"username","description":"accounts username","type":[[["string"]]]},{"name":"password","description":"accounts auth token","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":101,"file":"client.js","path":"src/client"}},{"name":"joinChannel","description":"Client join new channel","params":[{"name":"channel","description":"Name of the channel to join","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":116,"file":"client.js","path":"src/client"}},{"name":"_setListenersCount","description":"Sets the amount of listeners","access":"private","meta":{"line":125,"file":"client.js","path":"src/client"}}],"events":[{"name":"error","description":"Emitted on some error","params":[{"name":"error","description":"the error that occurred","type":[["*"]]}],"meta":{"line":133,"file":"client.js","path":"src/client"}},{"name":"chat","description":"Emitted on a channel/room chat message","params":[{"name":"message","description":"The chat message","type":[[["Message"]]]}],"meta":{"line":312,"file":"Message.js","path":"src/client/handlers"}},{"name":"cheer","description":"Emitted when a message has property bits","params":[{"name":"message","description":"The bits message","type":[[["Message"]]]}],"meta":{"line":318,"file":"Message.js","path":"src/client/handlers"}},{"name":"message","description":"Emitted on chat or whisper","params":[{"name":"message","description":"Message reseved","type":[[["Message"]],[["Whisper"]]]}],"meta":{"line":324,"file":"Message.js","path":"src/client/handlers"}},{"name":"raw_message","description":"Emitted after raw evnts has been parsed","params":[{"name":"message","description":"parsed gatway message","type":[[["GatewayMessage"]]]}],"meta":{"line":21,"file":"Message.js","path":"src/client/handlers"}},{"name":"ready","description":"Emitted When the clients global user is resived","meta":{"line":129,"file":"Message.js","path":"src/client/handlers"}},{"name":"joinRoom","description":"Emitted when the client joins a chnnel/room","params":[{"name":"room","description":"The instinc of that joined channel/room","type":[[["Channel"]]]}],"meta":{"line":158,"file":"Message.js","path":"src/client/handlers"}},{"name":"whisper","description":"Emitted when the client resives a whisper message","params":[{"name":"message","description":"That Whisper message","type":[[["Whisper"]]]}],"meta":{"line":194,"file":"Message.js","path":"src/client/handlers"}},{"name":"stopHosting","description":"Emitted when a channel stops hosting","params":[{"name":"room","description":"The channel that has stoped hosting","type":[[["Channel"]]]},{"name":"count","description":"The count of viewers","type":[[["number"]]]}],"meta":{"line":209,"file":"Message.js","path":"src/client/handlers"}},{"name":"hosting","description":"Emitted when a channel starts hosting","params":[{"name":"room","description":"The channel that has started hosting","type":[[["Channel"]]]},{"name":"count","description":"The count of viewers","type":[[["number"]]]},{"name":"hostedChannel","description":"Name of the channel hosted","type":[[["string"]]]}],"meta":{"line":217,"file":"Message.js","path":"src/client/handlers"}},{"name":"leaveRoom","description":"Emitted when the client leaves a channel/room","params":[{"name":"room","description":"The channel/room that the client has left","type":[[["Channel"]]]}],"meta":{"line":231,"file":"Message.js","path":"src/client/handlers"}},{"name":"raw","description":"Emitted on raw gateway message","params":[{"name":"info","description":"The gateway string data","type":[[["string"]]]}],"meta":{"line":170,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"disconnected","description":"Emitted on the clients disconnect","meta":{"line":176,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"connecting","description":"Emitted when the client is connecting","meta":{"line":181,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"viewerUnban","description":"Emitted when a viewer of a channel/room got unbanned","params":[{"name":"room","description":"The channel the viewer was unbanned from","type":[[["Channel"]]]}],"meta":{"line":97,"file":"Channel.js","path":"src/structure"}},{"name":"viewerBan","description":"Emitted when a viewer got ban for a channel/room","params":[{"name":"viewer","description":"The viewer that was banned","type":[[["Viewer"]]]}],"meta":{"line":80,"file":"Viewer.js","path":"src/structure"}},{"name":"viewerTimeout","description":"Emitted when a viewer got timed out","params":[{"name":"viewer","description":"The viewer that got timed out","type":[[["Viewer"]]]}],"meta":{"line":107,"file":"Viewer.js","path":"src/structure"}}],"meta":{"line":13,"file":"client.js","path":"src/client"}},{"name":"ClientWebSocket","extends":[[["EventEmitter"]]],"props":[{"name":"client","description":"The client that instantiated this","nullable":true,"type":[[["Client"]]],"meta":{"line":20,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"socket","description":"The WebSocket connection","nullable":true,"type":[[["WebSocket"]]],"meta":{"line":26,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"reconnect","description":"Whether or not to reconnect the client if gets disconnected","type":[[["boolean"]]],"meta":{"line":32,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"reason","description":"The reason for the error/disconnect","nullable":true,"type":[[["string"]]],"meta":{"line":38,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"pingTimeout","access":"private","nullable":true,"type":[[["setTimeout"]]],"meta":{"line":44,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"trys","description":"The number of times the client has tryed connecting","type":[[["number"]]],"meta":{"line":50,"file":"ClientWebSocket.js","path":"src/client/websocket"}}],"methods":[{"name":"connect","description":"Connects to twitch server\n<info>login to twitch wss,\nmore info found here {@link https://dev.twitch.tv/docs/irc/guide#connecting-to-twitch-irc}</info>","params":[{"name":"ops","description":"identify data","type":[[["connectionOptions"]]]}],"returns":[[["void"]]],"meta":{"line":75,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"send","description":"send a command to the server","params":[{"name":"command","description":"server command","type":[[["string"]]]},{"name":"important","description":"if this command should be added first in queue","default":false,"type":[[["boolean"]]]}],"meta":{"line":130,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"_send","description":"Send data to twitch websoket server","access":"private","params":[{"name":"command","description":"server command","type":[[["string"]]]}],"meta":{"line":140,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"process","description":"Process the queue","access":"private","returns":[[["void"]]],"meta":{"line":150,"file":"ClientWebSocket.js","path":"src/client/websocket"}}],"meta":{"line":12,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"Channel","description":"Twitch Chat, Room or Channel","construct":{"name":"Channel","params":[{"name":"client","description":"client instance","type":[[["Client"]]]},{"name":"channel","description":"channel name","type":[[["string"]]]}]},"props":[{"name":"name","description":"channel name","type":[[["string"]]],"meta":{"line":27,"file":"Channel.js","path":"src/structure"}},{"name":"id","description":"Channel id","nullable":true,"type":[[["string"]]],"meta":{"line":33,"file":"Channel.js","path":"src/structure"}},{"name":"moderators","description":"Channel moderators","type":[[["Storage","<"],["string",", "],["Viewer",">"]]],"meta":{"line":39,"file":"Channel.js","path":"src/structure"}},{"name":"chatType","description":"Type of chat","nullable":true,"type":[[["ChatTypes"]]],"meta":{"line":45,"file":"Channel.js","path":"src/structure"}},{"name":"subs","description":"chat subs only mode","nullable":true,"type":[[["boolean"]]],"meta":{"line":51,"file":"Channel.js","path":"src/structure"}},{"name":"r9k","description":"if message characters of 9 must be unique","nullable":true,"type":[[["boolean"]]],"meta":{"line":57,"file":"Channel.js","path":"src/structure"}}],"methods":[{"name":"send","description":"Message that channel","examples":["channel.send('ping').catch(console.log);"],"params":[{"name":"content","description":"message content","type":[[["string"]],[["Object"]]]}],"async":true,"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":67,"file":"Channel.js","path":"src/structure"}},{"name":"unban","description":"Unbans a viewer from this channel","params":[{"name":"username","description":"Viewer being unban for this channel","type":[[["string"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":94,"file":"Channel.js","path":"src/structure"}},{"name":"clear","description":"Clear all messages in chat","returns":[[["Promise","<"],["Channel",">"]]],"meta":{"line":121,"file":"Channel.js","path":"src/structure"}},{"name":"deleteMessages","description":"Delete message(s) from channel","params":[{"name":"messageID","description":"id of message to delete","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":140,"file":"Channel.js","path":"src/structure"}},{"name":"leave","description":"leaves channel","examples":["channel.leave();"],"returns":[[["void"]]],"meta":{"line":177,"file":"Channel.js","path":"src/structure"}}],"meta":{"line":11,"file":"Channel.js","path":"src/structure"}},{"name":"ClientUser","description":"Clients global user","construct":{"name":"ClientUser","params":[{"name":"data","description":"user data","type":[[["Object"]]]}]},"props":[{"name":"username","description":"clients display name","type":[[["string"]]],"meta":{"line":16,"file":"ClientUser.js","path":"src/structure"}},{"name":"id","description":"clients id","type":[[["string"]]],"meta":{"line":22,"file":"ClientUser.js","path":"src/structure"}}],"meta":{"line":6,"file":"ClientUser.js","path":"src/structure"}},{"name":"Message","description":"Message emeited structure","construct":{"name":"Message","params":[{"name":"client","description":"client instance","type":[[["Client"]]]},{"name":"message","description":"Message data","type":[[["MessageDataStructures"]]]},{"name":"self","description":"Whether the message is from client","optional":true,"default":false,"type":[[["boolean"]]]}]},"props":[{"name":"author","description":"message Viewer data","type":[[["Viewer"]],[["string"]]],"meta":{"line":23,"file":"Message.js","path":"src/structure"}},{"name":"channel","description":"message channel","nullable":true,"type":[[["Channel"]]],"meta":{"line":29,"file":"Message.js","path":"src/structure"}},{"name":"content","description":"message content","type":[[["string"]]],"meta":{"line":35,"file":"Message.js","path":"src/structure"}},{"name":"id","description":"message id","nullable":true,"type":[[["string"]]],"meta":{"line":41,"file":"Message.js","path":"src/structure"}},{"name":"self","description":"Whether the message is from client","type":[[["boolean"]]],"meta":{"line":47,"file":"Message.js","path":"src/structure"}},{"name":"type","description":"emited type of message","type":[[["messageTypes"]]],"meta":{"line":53,"file":"Message.js","path":"src/structure"}}],"methods":[{"name":"reply","description":"reply to a message","params":[{"name":"content","description":"reply message","type":[[["string"]],[["Object"]]]}],"async":true,"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":61,"file":"Message.js","path":"src/structure"}}],"meta":{"line":6,"file":"Message.js","path":"src/structure"}},{"name":"Storage","extends":[[["Map"]]],"methods":[{"name":"map","description":"Maps this by the function","params":[{"name":"fn","description":"takes object and reterns something","type":[[["function"]]]}],"returns":[[["Array"]]],"meta":{"line":12,"file":"Storage.js","path":"src/structure"}},{"name":"find","description":"Finds a Value in this and reterns it","params":[{"name":"fn","description":"The finder function","type":[[["function"]]]}],"returns":[["*"]],"meta":{"line":25,"file":"Storage.js","path":"src/structure"}}],"meta":{"line":6,"file":"Storage.js","path":"src/structure"}},{"name":"Viewer","description":"A message user structure","construct":{"name":"Viewer","params":[{"name":"client","description":"client instance","type":[[["Client"]]]},{"name":"data","description":"viewer data","type":[[["Object"]]]}]},"props":[{"name":"id","description":"Viewer id","type":[[["string"]]],"meta":{"line":26,"file":"Viewer.js","path":"src/structure"}},{"name":"username","description":"Viewer display name","type":[[["string"]]],"meta":{"line":36,"file":"Viewer.js","path":"src/structure"}},{"name":"mod","description":"Whether the viewer is mod","type":[[["boolean"]]],"meta":{"line":42,"file":"Viewer.js","path":"src/structure"}},{"name":"color","description":"Viewers channel color","nullable":true,"type":[[["string"]]],"meta":{"line":48,"file":"Viewer.js","path":"src/structure"}},{"name":"badges","description":"Viewers chat badges","nullable":true,"type":[[["Object"]]],"meta":{"line":54,"file":"Viewer.js","path":"src/structure"}},{"name":"subscriber","description":"Whether the viewer is a subscriber on this channel","type":[[["boolean"]]],"meta":{"line":63,"file":"Viewer.js","path":"src/structure"}},{"name":"channel","description":"The channel from where the viewer was reserved","nullable":true,"type":[[["Channel"]]],"meta":{"line":69,"file":"Viewer.js","path":"src/structure"}}],"methods":[{"name":"ban","description":"Ban this Viewer from Channel","params":[{"name":"reason","description":"ban reason","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["Viewer",">"]]],"meta":{"line":77,"file":"Viewer.js","path":"src/structure"}},{"name":"timeout","description":"Timeout viewer from channel","params":[{"name":"time","description":"viwer timeout time in milliseconds","optional":true,"default":60000,"type":[[["number"]]]}],"returns":[[["Promise","<"],["Viewer",">"]]],"meta":{"line":103,"file":"Viewer.js","path":"src/structure"}}],"meta":{"line":10,"file":"Viewer.js","path":"src/structure"}},{"name":"Whisper","description":"Whisper Message structure","extends":[[["Message"]]],"construct":{"name":"Whisper","params":[{"name":"client","description":"client instance","type":[[["Client"]]]},{"name":"message","description":"Message data","type":[[["MessageDataStructures"]]]},{"name":"whisperMessage","description":"whisper data","type":[[["Object"]]]},{"name":"self","description":"Whether the message is from client","optional":true,"default":false,"type":[[["boolean"]]]}]},"props":[{"name":"user_id","description":"user id, person sending the message","type":[[["string"]]],"meta":{"line":22,"file":"Whisper.js","path":"src/structure"}},{"name":"thread_id","description":"whisper channel/chat/dm id","type":[[["string"]]],"meta":{"line":28,"file":"Whisper.js","path":"src/structure"}},{"name":"user_badges","description":"user badges, other way to get message users badges if author is undefined","type":[[["Object"]]],"meta":{"line":34,"file":"Whisper.js","path":"src/structure"}},{"name":"author","description":"message Viewer data","type":[[["Viewer"]],[["string"]]],"meta":{"line":23,"file":"Message.js","path":"src/structure"}},{"name":"channel","description":"message channel","nullable":true,"type":[[["Channel"]]],"meta":{"line":29,"file":"Message.js","path":"src/structure"}},{"name":"content","description":"message content","type":[[["string"]]],"meta":{"line":35,"file":"Message.js","path":"src/structure"}},{"name":"id","description":"message id","nullable":true,"type":[[["string"]]],"meta":{"line":41,"file":"Message.js","path":"src/structure"}},{"name":"self","description":"Whether the message is from client","type":[[["boolean"]]],"meta":{"line":47,"file":"Message.js","path":"src/structure"}},{"name":"type","description":"emited type of message","type":[[["messageTypes"]]],"meta":{"line":53,"file":"Message.js","path":"src/structure"}}],"methods":[{"name":"reply","description":"reply to a message","inherits":"Message#reply","inherited":true,"params":[{"name":"content","description":"reply message","type":[[["string"]],[["Object"]]]}],"async":true,"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":61,"file":"Message.js","path":"src/structure"}}],"meta":{"line":8,"file":"Whisper.js","path":"src/structure"}},{"name":"queue","description":"Channel connector queue","access":"private","construct":{"name":"queue","description":"queue options","params":[{"name":"delay","description":"delay time","type":[[["number"]]]}]},"methods":[{"name":"add","description":"add to queue","params":[{"name":"fn","description":"function used wene called queue","type":[[["function"]]]},{"name":"delay","description":"time used wene called queue","type":[[["number"]]]}],"meta":{"line":23,"file":"Queue.js","path":"src/utils"}},{"name":"run","description":"playes all the queue","params":[{"name":"index","description":"Starts play method","nullable":true,"type":[[["number"]]]}],"meta":{"line":31,"file":"Queue.js","path":"src/utils"}},{"name":"play","description":"go through all the queue","returns":[[["void"]]],"meta":{"line":40,"file":"Queue.js","path":"src/utils"}},{"name":"kill","description":"resets the timer","returns":[[["void"]]],"meta":{"line":57,"file":"Queue.js","path":"src/utils"}}],"meta":{"line":7,"file":"Queue.js","path":"src/utils"}}],"interfaces":[],"typedefs":[{"name":"ClientOptions","type":[[["Object"]]],"props":[{"name":"channels","description":"Channel this client will be joining","optional":true,"type":[[["Array","<"],["string",">"]]]},{"name":"reconnect","description":"Whether or not to reconnect the client if gets disconnected","optional":true,"type":[[["boolean"]]]}],"meta":{"line":139,"file":"client.js","path":"src/client"}},{"name":"GatewayMessage","type":[[["Object"]]],"props":[{"name":"raw","description":"Raw GatewayMessage string","type":[[["string"]]]},{"name":"tags","description":"Data tags","type":[[["Object"]]]},{"name":"prefix","description":"GatewayMessage type","type":[[["string"]]]},{"name":"command","description":"Action command","type":[[["string"]]]},{"name":"params","description":"Extra data","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":303,"file":"Message.js","path":"src/client/handlers"}},{"name":"connectionOptions","type":[[["Object"]]],"props":[{"name":"username","description":"clients inputed username","type":[[["string"]]]},{"name":"password","description":"twitch inputed oauth token","type":[[["string"]]]}],"meta":{"line":186,"file":"ClientWebSocket.js","path":"src/client/websocket"}},{"name":"ChatTypes","description":"The type/mode a channel chat is set to\n* any - Anyone can chat \n* followers - Only followers can chat\n* followerWait - Only followers can chat after the time set","type":[[["string"]]],"meta":{"line":185,"file":"Channel.js","path":"src/structure"}},{"name":"messageTypes","description":"The type of message sent\n* chat\n* cheer","type":[[["string"]]],"meta":{"line":88,"file":"Message.js","path":"src/structure"}},{"name":"MessageDataStructures","type":[[["object"]]],"props":[{"name":"channel","description":"Message channel's name","optional":true,"type":[[["string"]]]},{"name":"content","description":"Message's content","type":[[["string"]]]},{"name":"id","description":"Message channel's id","optional":true,"type":[[["string"]]]},{"name":"author","description":"The viewer or name of the message author","optional":true,"type":[[["Viewer"]],[["string"]]]},{"name":"type","description":"Message type. e.g: 'wisper', 'chat'","type":[[["ChatTypes"]]]}],"meta":{"line":95,"file":"Message.js","path":"src/structure"}}],"externals":[]}